{"version":3,"file":"commonHelpers.js","sources":["../src/index.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\n\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst PHOTOS_PER_PAGE = 40;\n\nconst elements = {\n  form: document.querySelector('.search-form'),\n  gallery: document.querySelector('.gallery'),\n  guard: document.querySelector('.js-guard'),\n};\n\nelements.form.addEventListener('submit', handleSubmit);\n\nlet query;\nlet counterObserver = 0;\nlet page = 1;\nlet simpleLightboxInstance;\n\nconst options = {\n  root: null,\n  rootMargin: '300px',\n  threshold: 1.0,\n};\n\nconst observer = new IntersectionObserver(handlerLoadMore, options);\n\nasync function fetchPhotos(query, page = 1) {\n  const params = new URLSearchParams({\n    key: '9172745-088e6c545fefcd781d4229961',\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    page,\n    per_page: PHOTOS_PER_PAGE,\n  });\n\n  const response = await axios.get('https://pixabay.com/api/', { params });\n\n  if (response.status !== 200) {\n    throw new Error(response.statusText || 'Something went wrong');\n  }\n\n  return response;\n}\n\nasync function handleSubmit(event) {\n  event.preventDefault();\n\n  elements.gallery.innerHTML = '';\n\n  query = event.target.elements.searchQuery.value.trim();\n\n  const {\n    data: { hits },\n  } = await fetchPhotos(query);\n\n  if (!hits.length) {\n    elements.gallery.innerHTML =\n      'Sorry, there are no images matching your search query. Please try again.';\n  } else {\n    createMarkup(hits);\n    simpleLightboxInstance = new SimpleLightbox('.gallery a');\n    observer.observe(elements.guard);\n  }\n}\n\nfunction createMarkup(imagesArray) {\n  const markup = imagesArray\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n        <a href=\"${largeImageURL}\" class=\"photo-card\">\n          <div>\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" class=\"photo-image\"/>\n            <div class=\"info\">\n              <p class=\"info-item\">\n                <b>Likes</b>\n                <br>\n                ${likes}\n              </p>\n              <p class=\"info-item\">\n                <b>Views</b>\n                <br>\n                ${views}\n              </p>\n              <p class=\"info-item\">\n                <b>Comments</b>\n                <br>\n                ${comments}\n              </p>\n              <p class=\"info-item\">\n                <b>Downloads</b>\n                <br>\n                ${downloads}\n              </p>\n            </div>\n          </div>\n        </a>\n      `;\n      }\n    )\n    .join('');\n\n  elements.gallery.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction handlerLoadMore(entries) {\n  counterObserver += 1;\n\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      page += 1;\n\n      fetchPhotos(query, page)\n        .then(responce => {\n          const {\n            data: { hits, totalHits },\n          } = responce;\n\n          elements.gallery.insertAdjacentHTML('beforeend', createMarkup(hits));\n\n          iziToast.info({\n            message: `Hooray! We found ${hits.length} images.`,\n          });\n\n          simpleLightboxInstance.refresh();\n\n          const { height: cardHeight } = document\n            .querySelector('.gallery')\n            .firstElementChild.getBoundingClientRect();\n\n          window.scrollBy({\n            top: cardHeight * 2,\n            behavior: 'smooth',\n          });\n\n          if (page * PHOTOS_PER_PAGE >= totalHits) {\n            observer.unobserve(elements.guard);\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  });\n}\n"],"names":["PHOTOS_PER_PAGE","elements","handleSubmit","query","page","simpleLightboxInstance","options","observer","handlerLoadMore","fetchPhotos","params","response","axios","event","hits","createMarkup","SimpleLightbox","imagesArray","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","entries","entry","responce","totalHits","iziToast","cardHeight","err"],"mappings":"owBAOA,MAAMA,EAAkB,GAElBC,EAAW,CACf,KAAM,SAAS,cAAc,cAAc,EAC3C,QAAS,SAAS,cAAc,UAAU,EAC1C,MAAO,SAAS,cAAc,WAAW,CAC3C,EAEAA,EAAS,KAAK,iBAAiB,SAAUC,CAAY,EAErD,IAAIC,EAEAC,EAAO,EACPC,EAEJ,MAAMC,EAAU,CACd,KAAM,KACN,WAAY,QACZ,UAAW,CACb,EAEMC,EAAW,IAAI,qBAAqBC,EAAiBF,CAAO,EAElE,eAAeG,EAAYN,EAAOC,EAAO,EAAG,CAC1C,MAAMM,EAAS,IAAI,gBAAgB,CACjC,IAAK,oCACL,EAAGP,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAAC,EACA,SAAUJ,CACd,CAAG,EAEKW,EAAW,MAAMC,EAAM,IAAI,2BAA4B,CAAE,OAAAF,CAAM,CAAE,EAEvE,GAAIC,EAAS,SAAW,IACtB,MAAM,IAAI,MAAMA,EAAS,YAAc,sBAAsB,EAG/D,OAAOA,CACT,CAEA,eAAeT,EAAaW,EAAO,CACjCA,EAAM,eAAc,EAEpBZ,EAAS,QAAQ,UAAY,GAE7BE,EAAQU,EAAM,OAAO,SAAS,YAAY,MAAM,OAEhD,KAAM,CACJ,KAAM,CAAE,KAAAC,CAAM,CAClB,EAAM,MAAML,EAAYN,CAAK,EAEtBW,EAAK,QAIRC,EAAaD,CAAI,EACjBT,EAAyB,IAAIW,EAAe,YAAY,EACxDT,EAAS,QAAQN,EAAS,KAAK,GAL/BA,EAAS,QAAQ,UACf,0EAMN,CAEA,SAASc,EAAaE,EAAa,CACjC,MAAMC,EAASD,EACZ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA,mBACIL;AAAA;AAAA,wBAEKD,WAAsBE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAK5BC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKAC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKAC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKAC;AAAA;AAAA;AAAA;AAAA;AAAA,OAOb,EACA,KAAK,EAAE,EAEVxB,EAAS,QAAQ,mBAAmB,YAAaiB,CAAM,CACzD,CAEA,SAASV,EAAgBkB,EAAS,CAGhCA,EAAQ,QAAQC,GAAS,CACnBA,EAAM,iBACRvB,GAAQ,EAERK,EAAYN,EAAOC,CAAI,EACpB,KAAKwB,GAAY,CAChB,KAAM,CACJ,KAAM,CAAE,KAAAd,EAAM,UAAAe,CAAW,CAC1B,EAAGD,EAEJ3B,EAAS,QAAQ,mBAAmB,YAAac,EAAaD,CAAI,CAAC,EAEnEgB,EAAS,KAAK,CACZ,QAAS,oBAAoBhB,EAAK,gBAC9C,CAAW,EAEDT,EAAuB,QAAO,EAE9B,KAAM,CAAE,OAAQ0B,CAAU,EAAK,SAC5B,cAAc,UAAU,EACxB,kBAAkB,sBAAqB,EAE1C,OAAO,SAAS,CACd,IAAKA,EAAa,EAClB,SAAU,QACtB,CAAW,EAEG3B,EAAOJ,GAAmB6B,GAC5BtB,EAAS,UAAUN,EAAS,KAAK,CAE7C,CAAS,EACA,MAAM+B,GAAO,QAAQ,IAAIA,CAAG,CAAC,EAEtC,CAAG,CACH"}